import{_ as e,r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-144f2dab.js";const i={},r=n("h1",{id:"如何拥有自己的定制的commit规范",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#如何拥有自己的定制的commit规范","aria-hidden":"true"},"#"),s(" 如何拥有自己的定制的commit规范")],-1),u={href:"https://commitlint.js.org/#/",target:"_blank",rel:"noopener noreferrer"},k=p(`<h2 id="首先在项目-sd-fe-eng-初始化文件" tabindex="-1"><a class="header-anchor" href="#首先在项目-sd-fe-eng-初始化文件" aria-hidden="true">#</a> 首先在项目 sd-fe-eng 初始化文件</h2><p>learn create commintlint-config</p><p>然后learn会在 packages 生成一个文件夹 里面有一些初始化的文件创建在根目录下创建index.js文件 package.json的main入口 改为index.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">parserPreset</span><span class="token operator">:</span> <span class="token string">&#39;conventional-changelog-conventionalcommits&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 预设解析 注意我们需要用到这个npm包 所以需要安装</span>
  <span class="token comment">// 提交的一些规则</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;body-leading-blank&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;body-max-line-length&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;footer-leading-blank&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;footer-max-line-length&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;header-max-length&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;scope-case&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lower-case&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;subject-case&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;subject-empty&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;subject-full-stop&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;type-case&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lower-case&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;type-empty&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;type-enum&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;feat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fix&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;docs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;refactor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chore&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;revert&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些规则也是参考当前的主流方案，当然你也可以根据自己一些特殊要求定制一些特殊规则</p><p>在sd-fe-eng项目的根目录下 创建commitlint.config.js文件 在文件里引入我们创建包的路径</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
   <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;./packages/commitlint-config/index.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后安装 @commitlint/cli 包</p><h2 id="设置-git-hook" tabindex="-1"><a class="header-anchor" href="#设置-git-hook" aria-hidden="true">#</a> 设置 git hook</h2>`,9),d={href:"https://www.npmjs.com/package/husky",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"git commit",-1),g=n("code",null,"commitlint",-1),v=p(`<p>首先安装 husky：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> husky --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后执行添加<code>commit-msg</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx husky <span class="token function">add</span> .husky/commit-msg <span class="token string">&#39;npx commitlint --edit $1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后可以测试发现 每次提交的时候都会校验规则 如果不按照规则来 那么就会报错 无法提交</p><h2 id="conventional-changelog-conventionalcommits" tabindex="-1"><a class="header-anchor" href="#conventional-changelog-conventionalcommits" aria-hidden="true">#</a> conventional-changelog-conventionalcommits</h2><p>为什么要用这个预设解析的包，是为了我们生成changelog的时候 能够根据commit自动生成，也是为了规范changelog</p><h2 id="changelog的生成" tabindex="-1"><a class="header-anchor" href="#changelog的生成" aria-hidden="true">#</a> changelog的生成</h2><p>全局安装 <code>npm install -g conventional-changelog-cli</code> changelog的cli</p><p>然后在package.json里添加 <code>&quot;changelog&quot;: &quot;conventional-changelog -p angular -i CHANGELOG.md -s&quot;</code></p><p>执行 changelog 命令，会根据当前的提交生成自动生成 changelog</p>`,11);function h(b,y){const a=o("ExternalLinkIcon");return c(),l("div",null,[r,n("p",null,[n("a",u,[s("commitlint官网"),t(a)])]),k,n("p",null,[s("可通过 "),n("a",d,[s("husky"),t(a)]),s(" 设置在 "),m,s(" 时触发 "),g,s("。")]),v])}const _=e(i,[["render",h],["__file","commitlint.html.vue"]]);export{_ as default};
