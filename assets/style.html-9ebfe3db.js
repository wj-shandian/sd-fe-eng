import{_ as e,r as p,o as t,c as o,a as s,b as n,d as l,e as i}from"./app-144f2dab.js";const r={},c=s("h1",{id:"关于stylelint规范开发",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#关于stylelint规范开发","aria-hidden":"true"},"#"),n(" 关于stylelint规范开发")],-1),u={href:"https://stylelint.io/user-guide/configure",target:"_blank",rel:"noopener noreferrer"},d=i('<h2 id="首先在项目-sd-fe-eng-初始化文件" tabindex="-1"><a class="header-anchor" href="#首先在项目-sd-fe-eng-初始化文件" aria-hidden="true">#</a> 首先在项目 sd-fe-eng 初始化文件</h2><p>learn create stylelint-config</p><p>然后learn会在 packages 生成一个文件夹 里面有一些初始化的文件创建在根目录下创建index.js package.json的main入口 改为index.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 默认错误级别</span>\n    <span class="token literal-property property">defaultSeverity</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 插件</span>\n    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;stylelint-scss&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment">// 规则</span>\n    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token doc-comment comment">/**\n       * Possible errors\n       * <span class="token keyword">@link</span> https://stylelint.io/user-guide/rules/#possible-errors\n       */</span>\n      <span class="token string-property property">&#39;at-rule-no-unknown&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;scss/at-rule-no-unknown&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;block-no-empty&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;color-no-invalid-hex&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;comment-no-empty&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;declaration-block-no-duplicate-properties&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">ignore</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;consecutive-duplicates-with-different-values&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;declaration-block-no-shorthand-property-overrides&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;font-family-no-duplicate-names&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;function-calc-no-unspaced-operator&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;function-linear-gradient-no-nonstandard-direction&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;keyframe-declaration-no-important&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;media-feature-name-no-unknown&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;no-descending-specificity&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// @reason 实际有很多这样用的，且多数人熟悉 css 优先级</span>\n      <span class="token string-property property">&#39;no-duplicate-at-import-rules&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;no-duplicate-selectors&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;no-empty-source&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;no-extra-semicolons&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;no-invalid-double-slash-comments&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;property-no-unknown&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;selector-pseudo-class-no-unknown&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">ignorePseudoClasses</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;global&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;local&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;export&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;selector-pseudo-element-no-unknown&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;string-no-newline&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;unit-no-unknown&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">ignoreUnits</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;rpx&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  \n      <span class="token doc-comment comment">/**\n       * Stylistic issues\n       * <span class="token keyword">@link</span> https://stylelint.io/user-guide/rules/list#stylistic-issues\n       */</span>\n      <span class="token literal-property property">indentation</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;block-closing-brace-newline-before&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always-multi-line&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;block-closing-brace-space-before&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always-single-line&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;block-opening-brace-newline-after&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always-multi-line&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;block-opening-brace-space-before&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;block-opening-brace-space-after&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always-single-line&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;color-hex-case&#39;</span><span class="token operator">:</span> <span class="token string">&#39;lower&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;color-hex-length&#39;</span><span class="token operator">:</span> <span class="token string">&#39;short&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;comment-whitespace-inside&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;declaration-colon-space-before&#39;</span><span class="token operator">:</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;declaration-colon-space-after&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;declaration-block-single-line-max-declarations&#39;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;declaration-block-trailing-semicolon&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">severity</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;length-zero-no-unit&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">ignore</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;custom-properties&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;max-line-length&#39;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;selector-max-id&#39;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;value-list-comma-space-after&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always-single-line&#39;</span><span class="token punctuation">,</span>\n  \n      <span class="token doc-comment comment">/**\n       * stylelint-scss rules\n       * <span class="token keyword">@link</span> https://www.npmjs.com/package/stylelint-scss\n       */</span>\n      <span class="token string-property property">&#39;scss/double-slash-comment-whitespace-inside&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 忽略文件</span>\n    <span class="token literal-property property">ignoreFiles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;**/*.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;**/*.jsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;**/*.ts&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;**/*.tsx&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n* 部分规则上释义\n1. `at-rule-no-unknown`: 检查是否有未知的 at-rule。如果存在这样的 at-rule，则会在 CSS Lint 中显示错误。该规则被禁用了，因为您在配置对象中将其设置为 `null`。\n2. `scss/at-rule-no-unknown`: 检查 SCSS（嵌套的 CSS）代码中的未知的 at-rule。该规则被设置为 `true`，表示应该检查该规则。\n3. `block-no-empty`: 检查块级选择器是否为空。如果存在空的块级选择器，则会在 CSS Lint 中显示错误。该规则被设置为 `null`，表示该规则被禁用了。\n4. `color-no-invalid-hex`: 检查颜色值是否为有效的十六进制颜色。如果颜色值无效，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n5. `comment-no-empty`: 检查注释是否为空。如果存在空的注释，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n6. `declaration-block-no-duplicate-properties`: 检查声明块中是否有重复的属性。如果存在重复的属性，则会在 CSS Lint 中显示错误。该规则被设置为 `[true, <span class="token punctuation">{</span>ignore: [&#39;consecutive-duplicates-with-different-values&#39;]<span class="token punctuation">}</span>]`，表示应该检查该规则，并且允许连续重复的属性，只要它们的值不同。\n7. `declaration-block-no-shorthand-property-overrides`: 检查声明块中是否存在简写属性被覆盖的情况。如果存在简写属性被覆盖，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n8. `font-family-no-duplicate-names`: 检查字体的名称是否重复。如果存在重复的字体名称，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n9. `function-calc-no-unspaced-operator`: 检查 calc() 函数中的操作符是否包含空格。如果包含空格，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n10. `function-linear-gradient-no-nonstandard-direction`: 检查 linear-gradient() 函数的方向是否为标准方向。如果不为标准方向，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n11. `keyframe-declaration-no-important`: 检查关键帧声明中的 !important 关键字是否有效。如果存在无效的 !important，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n12. `media-feature-name-no-unknown`: 检查媒体特性名称是否为已知名称。如果存在未知的媒体特性名称，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n13. `no-descending-specificity`: 检查选择器是否具有降级specificity。如果存在降级specificity，则会在 CSS Lint 中显示警告。该规则被设置为 `null`，表示该规则被禁用了。\n14. `no-duplicate-at-import-rules`: 检查 at-import 规则是否重复。如果存在重复的 at-import 规则，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n15. `no-duplicate-selectors`: 检查选择器是否重复。如果存在重复的选择器，则会在 CSS Lint 中显示错误。该规则被设置为 `true`，表示应该检查该规则。\n16. `no-empty-source`: 检查源代码文件是否为空。如果文件为空，则会在 CSS Lint 中显示错误。该规则被设置为 `null`，表示该规则被禁用了。\n17. `no-extra-semicolons`: 检查代码中是否有多余的分号。如果存在多余的分号，则会在 CSS Lint 中显示错误。\n1. `indentation`: 设置缩进的空格数。该规则被设置为 2，表示应该使用 2 个空格进行缩进。\n2. `block-closing-brace-newline-before`: 设置块级属性的关闭括号前的换行情况。如果该规则设置为 `always-multi-line`，则在多行情况下需要换行；如果该规则设置为 `always-single-line`，则在单行情况下需要换行。该规则被设置为 `always-multi-line`，表示应该在多行情况下换行。\n3. `block-closing-brace-space-before`: 设置块级属性的关闭括号前的空格情况。如果该规则设置为 `always-single-line`，则在单行情况下需要添加空格；如果该规则设置为 `never`，则在所有情况下都不需要添加空格。该规则被设置为 `always-single-line`，表示应该在单行情况下添加空格。\n4. `block-opening-brace-newline-after`: 设置块级属性的开始括号后的换行情况。如果该规则设置为 `always-multi-line`，则在多行情况下需要换行；如果该规则设置为 `always-single-line`，则在单行情况下需要换行。该规则被设置为 `always-multi-line`，表示应该在多行情况下换行。\n5. `block-opening-brace-space-before`: 设置块级属性的开始括号前的空格情况。如果该规则设置为 `always`，则在所有情况下都需要添加空格；如果该规则设置为 `never`，则在所有情况下都不需要添加空格。该规则被设置为 `always`，表示应该在所有情况下添加空格。\n6. `block-opening-brace-space-after`: 设置块级属性的开始括号后的空格情况。如果该规则设置为 `always-single-line`，则在单行情况下需要添加空格；如果该规则设置为 `always`，则在所有情况下都需要添加空格。该规则被设置为 `always-single-line`，表示应该在单行情况下添加空格。\n7. `color-hex-case`: 设置十六进制颜色的大小写。如果该规则设置为 `lower`，则在所有情况下都使用小写字母；如果该规则设置为 `upper`，则在所有情况下都使用大写字母。该规则被设置为 `lower`，表示应该在所有情况下使用小写字母。\n8. `color-hex-length`: 设置十六进制颜色字符的长度。如果该规则设置为 `short`，则在所有情况下都允许使用短格式（例如，`#123456`）；如果该规则设置为 `long`，则在所有情况下都允许使用长格式（例如，`#1234567890123456`）。该规则被设置为 `short`，表示应该在所有情况下都允许使用短格式。\n9. `comment-whitespace-inside`: 设置注释中的空格情况。如果该规则设置为 `always`，则在所有情况下都允许注释中的空格；如果该规则设置为 `never`，则在所有情况下都不允许注释中的空格。该规则被设置为 `always`，表示应该在所有情况下允许注释中的空格。\n10. `declaration-colon-space-before`: 设置声明中的冒号前的空格情况。如果该规则设置为 `never`，则在所有情况下都不允许冒号前的空格；如果该规则设置为 `always`，则在所有情况下都允许冒号前的空格。该规则被设置为 `never`，表示应该在所有情况下都不允许冒号前的空格。\n11. `declaration-colon-space-after`: 设置声明中的冒号后的空格情况。如果该规则设置为 `always`，则在所有情况下都允许冒号后的空格；如果该规则设置为 `never`，则在所有情况下都不允许冒号后的空格。该规则被设置为 `always`，表示应该在所有情况下允许冒号后的空格。\n12. `declaration-block-single-line-max-declarations`: 设置单行声明的最大数量。\n   */</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在插件中 stylelint stylelint-scss 在插件中添加 peerDependencies 避免插件的重复安装</p><h2 id="在-sd-fe-eng项目中调试" tabindex="-1"><a class="header-anchor" href="#在-sd-fe-eng项目中调试" aria-hidden="true">#</a> 在 sd-fe-eng项目中调试</h2><p>创建文件 .stylelintrc 然后引入插件包</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token string-property property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./packages/stylelint-config/index.js&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根目录下安装 stylelint stylelint-scss</p><p>添加测试文件 index.css</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.a</span> <span class="token punctuation">{</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token string">&#39;400&#39;</span><span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #fff1az<span class="token punctuation">;</span>\n  <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在package.json 添加命令 <code>&quot;style&quot;: &quot;stylelint \\&quot;*.(scss|css)\\&quot; --fix&quot;</code></p><p>然后执行 可以发现 一些报错 并且文件也做了一些修复 这里只能自动修复一些 不是所有的错误都能被修正，所以还需要自己手动修改</p><p>然后发布 npm包即可</p><p>当然里面的规则 可以根据自己或者团队形成自己的规范。上面的规范只是参考。</p>',15);function k(v,m){const a=p("ExternalLinkIcon");return t(),o("div",null,[c,s("p",null,[n("可以阅读以下官网 "),s("a",u,[n("stylelint官网"),l(a)]),n(" 了解一下 stylelint的功能 以及能实现哪些东西")]),d])}const y=e(r,[["render",k],["__file","style.html.vue"]]);export{y as default};
