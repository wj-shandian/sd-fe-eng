import{_ as n,o as s,c as a,e as t}from"./app-144f2dab.js";const p={},o=t(`<h1 id="lint-脚手架开发" tabindex="-1"><a class="header-anchor" href="#lint-脚手架开发" aria-hidden="true">#</a> lint 脚手架开发</h1><h2 id="首先在项目-sd-fe-eng-初始化文件" tabindex="-1"><a class="header-anchor" href="#首先在项目-sd-fe-eng-初始化文件" aria-hidden="true">#</a> 首先在项目 sd-fe-eng 初始化文件</h2><p><code>lerna create sd-fe-lint</code></p><p>相关的配置以及依赖包参考源代码，这里只说下整个实现的过程，代码中部分关键点会有注释说明</p><p>这里我们用 ts 来写</p><p>首先创建 src 文件夹，在 src 文件夹下创建 index.ts 文件，作为入口文件 创建 cli.ts 文件作为命令行入口文件</p><h2 id="实现初始化" tabindex="-1"><a class="header-anchor" href="#实现初始化" aria-hidden="true">#</a> 实现初始化</h2><p>初始化函数 首先实现 版本检查 如果脚手架有最新版本 那么更新</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> ora <span class="token keyword">from</span> <span class="token string">&quot;ora&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> execSync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;child_process&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> log <span class="token keyword">from</span> <span class="token string">&quot;../utils/log&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> npmType <span class="token keyword">from</span> <span class="token string">&quot;../utils/npm-type&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">PKG_NAME</span><span class="token punctuation">,</span> <span class="token constant">PKG_VERSION</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../utils/constants&quot;</span><span class="token punctuation">;</span> <span class="token comment">// PKG_VERSION 获取当前package的版本号</span>

<span class="token doc-comment comment">/** 检查版本号 */</span>

<span class="token keyword">const</span> <span class="token function-variable function">checkVersion</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> npm <span class="token operator">=</span> <span class="token keyword">await</span> npmType<span class="token punctuation">;</span>
  <span class="token keyword">const</span> latestVersion <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">execSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>npm<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> view </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PKG_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这个的意思是 执行 npm view node version 然后会返回当前最新版本号  这里的node只是举个例子</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>latestVersion <span class="token operator">===</span> <span class="token constant">PKG_VERSION</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> compareArr <span class="token operator">=</span> <span class="token constant">PKG_VERSION</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> beComparedArr <span class="token operator">=</span> latestVersion<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 依次比较版本号大小</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> compareArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>compareArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> beComparedArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>compareArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> beComparedArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> latestVersion<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/*
 * 检查版本并自动升级
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>install <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ora 作用是用于node的控制台进度美化 这里只是展示作用 没啥实际意义</span>
  <span class="token keyword">const</span> checking <span class="token operator">=</span> <span class="token function">ora</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Checking </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PKG_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  checking<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 关键逻辑在这里</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> npm <span class="token operator">=</span> <span class="token keyword">await</span> npmType<span class="token punctuation">;</span>
    <span class="token keyword">const</span> latestVersion <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">checkVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    checking<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 升级版本</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>latestVersion <span class="token operator">&amp;&amp;</span> install<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token function">ora</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Updating </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PKG_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> to version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>latestVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      update<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">execSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>npm<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> i -g </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PKG_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      update<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>latestVersion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 提示但是不下载 最新版本为 \${latestVersion}，本地版本为 \${PKG_VERSION}，请尽快升级到最新版本。\\n你可以执行 \${npm} install -g \${PKG_NAME}@latest 来安装此版本</span>
      log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The latest version is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>latestVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> and the local version is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PKG_VERSION</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> please upgrade to the latest version as soon as possible. \\n You can run  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>npm<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> install -g </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PKG_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">@latest  to install this version\\n</span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// 当前没有可用的更新</span>
      log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">There are currently no updates available</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    checking<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检查完版本 然后开始一些默认属性的初始化 这里会添加一些交互提示是否需要该选项，然后得到选择后的结果配置</p><p>因为我们的脚手机可以再新的项目中接入，所以需要检查是否有选项配置有冲突 然后执行 代码中 conflictResolve 函数进行检查配置 并弹出交互提示是否覆盖继续，如果覆盖 那么则删除一些配置项 然后重新写入</p><p>然后修改 package.json 中的一些命令 加入一键修复 一键扫描 以及两个 husk commit 提交检查和文件扫描检查</p><p>处理完 然后写入配置好的模版，这里的模版使用的是 ejs</p><p>然后写入成功后 初始化完毕</p><h2 id="一键扫描-一键修复" tabindex="-1"><a class="header-anchor" href="#一键扫描-一键修复" aria-hidden="true">#</a> 一键扫描 一键修复</h2><p>执行一键扫描 一键修复的原理 主要是 读取对应的文件内容 然后根据 prettier eslint stylelint markdownlint 提供的方法进行格式化修复 不是所有的错误都能被修复，不能修复的错误给出提示。让用户自己手动修复</p><p>这里举一个 例子来讲解 比如 prettier 的 自动修复</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> fg <span class="token keyword">from</span> <span class="token string">&quot;fast-glob&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> readFile<span class="token punctuation">,</span> writeFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;fs-extra&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> extname<span class="token punctuation">,</span> join <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> prettier <span class="token keyword">from</span> <span class="token string">&quot;prettier&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ScanOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../types&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  <span class="token constant">PRETTIER_FILE_EXT</span><span class="token punctuation">,</span>
  <span class="token constant">PRETTIER_IGNORE_PATTERN</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../utils/constants&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// extname 返回扩展名</span>
<span class="token comment">// fast-glob 文件系统遍历工具</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DoPrettierOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ScanOptions</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">doPrettier</span><span class="token punctuation">(</span>options<span class="token operator">:</span> DoPrettierOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> files<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    files <span class="token operator">=</span> options<span class="token punctuation">.</span>files<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token constant">PRETTIER_FILE_EXT</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token function">extname</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span>
      options<span class="token punctuation">.</span>include<span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">**/*.{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PRETTIER_FILE_EXT</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\.</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    files <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fg</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      cwd<span class="token operator">:</span> options<span class="token punctuation">.</span>cwd<span class="token punctuation">,</span>
      ignore<span class="token operator">:</span> <span class="token constant">PRETTIER_IGNORE_PATTERN</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>files<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>formatFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">formatFile</span><span class="token punctuation">(</span>filepath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 读取文件内容</span>
  <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 获取配置</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token keyword">await</span> prettier<span class="token punctuation">.</span><span class="token function">resolveConfig</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 格式化内容</span>
  <span class="token keyword">const</span> formatted <span class="token operator">=</span> prettier<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span>options<span class="token punctuation">,</span> filepath <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 输出内容</span>
  <span class="token keyword">await</span> <span class="token function">writeFile</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> formatted<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * prettier.resolveConfig 是一个函数，用于解析和获取项目中的 prettier 配置。它会搜索项目目录及其父级目录中的配置文件，找到最接近的配置文件，并返回解析后的配置对象。
   * prettier.format 是一个函数，用于格式化代码。它接受一个代码字符串作为输入，并返回格式化后的代码字符串。它会根据项目中的 prettier 配置来进行代码格式化，包括缩进、换行、括号等等。这个函数可以用于在开发过程中自动格式化代码，以保持代码风格的一致性。
   */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","cli.html.vue"]]);export{k as default};
